def localScript(s) {
	return [from: project.rootDir.path + "/gradle-include/" + s + ".gradle"]
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'osgi'
    apply plugin: 'license'
	apply localScript('jacoco')
	apply localScript('maven')
    
    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier 'sources'
        from sourceSets.main.allSource
    }
    
    artifacts {
        archives sourcesJar
    }

    jar {
        manifest {
            attributes 'Provider': 'Nortal AS'
            instruction '-nouses', 'true'
            instruction 'Bundle-Vendor', 'Nortal AS'
        }
    }
    
    license {
      header rootProject.file('LICENSE_HEADER')
      strictCheck true
    }
    
    group = 'com.nortal'
    version = '1.2.0'
  
    sourceCompatibility = 1.8

    tasks.withType(JavaCompile) { options.encoding = 'UTF-8' }

    repositories {
        mavenCentral()
    }

    configurations { deployerJars }
    
    ext {
        springVersion = '4.2.5.RELEASE'
        testRuntimeSpringVersion = '4.2.5.RELEASE'
        commonsLangVersion = '3.3.2'
    }

    dependencies {
        deployerJars 'org.apache.maven.wagon:wagon-ssh:2.2'

        testCompile 'org.springframework:spring-test:'+springVersion

        testCompile 'org.springframework:spring-context:'+testRuntimeSpringVersion
        testCompile 'org.springframework:spring-beans:'+testRuntimeSpringVersion
        testCompile 'org.springframework:spring-expression:'+testRuntimeSpringVersion
		testCompile group: 'junit', name: 'junit', version:'4.12'
		testCompile group: 'org.springframework', name: 'spring-test', version: testRuntimeSpringVersion
		testCompile group: 'org.hamcrest', name: 'hamcrest-all', version:'1.3'
		testCompile group: 'org.mockito', name: 'mockito-core', version:'1.10.19'
    }
}

//jar.doFirst {
// ant.replace(file: project.rootDir "sonar-project.properties", token: "sonar.projectVersion", value: "2.0")
//}

apply localScript('artifactory')
apply localScript('depgraph')
apply localScript('osgi')

task wrapper(type: Wrapper) { gradleVersion = '3.2.1' }

buildscript {
	repositories {
		mavenCentral()
		jcenter()
	}
	
	dependencies {
		classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.7.0'
		classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4.0.0"
	}
}